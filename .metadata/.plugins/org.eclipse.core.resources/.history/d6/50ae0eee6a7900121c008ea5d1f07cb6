/**
 * 
 */
package com.subject17.jdfs.client;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Scanner;

import com.subject17.jdfs.client.io.Printer;
import com.subject17.jdfs.client.reciever.Listener;
/**
 * @author James Hughes
 *
 */
public class UserNode {
	static BufferedReader input;
	
	/**
	 * @param args 
	 */
	public static void main(String[] args) {
		input = new BufferedReader(new InputStreamReader(System.in));
		Scanner inScan = new Scanner(System.in);
		// TODO Auto-generated method stub
		Printer.println("Do you wish to start a server or client?");
		Printer.println("1) Server");
		Printer.println("2) Client");
		switch(inScan.next().toLowerCase().substring(0,1)) {
			case "s": case "1": dispatchClient(); break;
			case "c": case "2": dispatchServer(); break;
		}
		
	}
	
<<<<<<< HEAD
	private static void dispatchServer() {
		int port = (int)(Math.random()*Math.pow(2, 15));
		Listener serv = new Listener();
		
=======
	public static void createClientListener(int port, String serverName) {
		try {
			String servername = input.readLine();
			Socket sock = new Socket(serverName, port);
			
			PrintWriter output = new PrintWriter(sock.getOutputStream(), true);
			BufferedReader in = new BufferedReader(new InputStreamReader(sock.getInputStream()));
			System.out.println("Connected!");
			String serverMsg;
			
			do {
				serverMsg = in.readLine();
				if (serverMsg!=null)
					System.out.println(serverMsg);
				
				output.println(input.readLine());
			} while (!serverMsg.equals("exit"));
			

			output.close();
			in.close();
			input.close();
			sock.close();
		} catch(IOException e){
			System.out.println("Client Could not listen on port "+port);
		}
		catch (Exception e) {
			System.out.println(e.getMessage());
		}
		finally {
		}
>>>>>>> 9037695bbad3b0645daa0d49eacbe18d70c3ab05
	}

	public static void dispatchClient() {
		
	}
}
